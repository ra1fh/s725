#!/usr/bin/env python2.7

# Copyright (C) 2016  Ralf Horstmann
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import numpy as np

import sys
import os

def usage():
    print("usage: s725plot <input> <output directory>")
    sys.exit()

def bytespdate2num(fmt, encoding='ascii'):
    strconverter = mdates.strpdate2num(fmt)
    def bytesconverter(b):
        s = b.decode(encoding)
        return strconverter(s)
    return bytesconverter
    
def read(filename):
    ch = ['time', 'hr', 'alt', 'vam', 'spd', 'dist']
    dd = [(ch[0], 'object')] + [(a, 'f4') for a in ch[1:]]
    cf = bytespdate2num("%H:%M:%S")
    data = np.genfromtxt(filename, dtype=dd, names=ch, converters={'time': cf})
    return data
    
def plothr(data, filename, output):
    x = data['time']
    y = data['hr']
    fig = plt.figure(figsize=(9.0, 5.0))
    line, = plt.plot_date(x=x, y=y, fmt="r-")
    line.set_color('#700000')
    plt.title(os.path.basename(filename))
    plt.ylabel("Heart Rate (bpm)")
    plt.ylim([30,210])
    plt.xlim([min(x) - 15.0/(24*60), max(x) + 15.0/(24*60)])
    plt.yticks([40,60,80,100,120,140,160,180,200])
    plt.xlabel("Time (h)")
    plt.grid(True)
    print(output)
    plt.savefig(output)

def plotalt(data, filename, output):
    x = data['time']
    y = data['alt']
    fig = plt.figure(figsize=(9.0, 5.0))
    line, = plt.plot_date(x=x, y=y, fmt="r-")
    line.set_color('#007000')
    plt.title(os.path.basename(filename))
    plt.ylabel("Altitude (m)")
    plt.xlim([min(x) - 15.0/(24*60), max(x) + 15.0/(24*60)])
    plt.ylim([min(y) - 50, max(y) + 50])
    plt.xlabel("Time (h)")
    plt.grid(True)
    print(output)
    plt.savefig(output)

def main(argv):
    if len(argv) < 3:
        usage()
    filename = argv[1]
    directory = argv[2]
    data = read(filename)
    base = os.path.splitext(os.path.basename(filename))[0]
    print("input:  " + filename)
    plothr(data, filename, directory + base + "-hr.png")
    plotalt(data, filename, directory + base + "-alt.png")

main(sys.argv)
